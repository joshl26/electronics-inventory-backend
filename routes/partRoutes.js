const express = require("express");
const router = express.Router();
const partsController = require("../controllers/partsController");
const verifyJWT = require("../middleware/verifyJWT");

/**
 * @swagger
 *  components:
 *   schemas:
 *    Parts:
 *      type: object
 *      required:
 *      - user
 *      - name
 *      - description
 *      properties:
 *          _id:
 *             type: string
 *             format: uuid
 *             description: The unique id auto generated by mongoose for the part
 *          user:
 *             type: string
 *             format: uuid
 *             description: The unique id auto generated by mongoose for the user
 *          name:
 *              type: string
 *              description: The name of the part
 *          password:
 *              type: string
 *              description: The username of the user
 *          roles:
 *              type: array
 *              description: Array of roles for this user
 *              items:
 *                  type: object
 *                  properties:
 *                      role:
 *                          type: string
 *                          description: The role of the user
 *          __V:
 *              type: number
 *              format: int32
 *              description: Version of the user settings, starting at 0 and incremented by +1 with each change saved
 *          colorMode:
 *              type: string
 *              description: The colorMode of the User
 *          partsListView:
 *              type: string
 *              description: The style of tables selected by user
 *
 */

/**
 * @swagger
 * /parts/:
 *   get:
 *     tags:
 *     - Parts
 *
 */

/**
 * @swagger
 * /parts/:
 *   get:
 *     summary: Get all parts from DB
 *     description: Return all parts in database
 *     responses:
 *       200:
 *         description: List of parts
 */

/**
 * @swagger
 * /parts/:
 *   post:
 *     tags:
 *     - Parts
 *
 */

/**
 * @swagger
 * /parts/:
 *   post:
 *     summary: Create new part
 *     description: Create new part
 *     responses:
 *       200:
 *         description: Create new part
 */

/**
 * @swagger
 * /parts/:
 *   patch:
 *     tags:
 *     - Parts
 *
 */

/**
 * @swagger
 * /parts/:
 *   patch:
 *     summary: Update part details
 *     description: Update part details
 *     responses:
 *       200:
 *         description: Update part details
 */

/**
 * @swagger
 * /parts/:
 *   delete:
 *     tags:
 *     - Parts
 *
 */

/**
 * @swagger
 * /parts/:
 *   delete:
 *     summary: Delete part
 *     description: Delete part
 *     responses:
 *       200:
 *         description: Delete part
 */

router.use(verifyJWT);

router
  .route("/")
  .get(partsController.getAllParts)
  .post(partsController.createNewPart)
  .patch(partsController.updatePart)
  .delete(partsController.deletePart);

module.exports = router;
